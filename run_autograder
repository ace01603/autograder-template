#!/usr/bin/env bash
###
# This script was created using a Jest-Gradescope autograder for reference
# https://github.com/ucsb-gradescope-tools/jest-autograder/
# The original autograder has been modified to work with the Playwright testing library (instead of Jest) and p5js sketches
###

DIR="/autograder/source"
OUTPUT_DIR="/autograder/results"
STUDENT_SUBMISSION_DIR="/autograder/submission"
PLAYWRIGHT_JSON_TOOL="$DIR/tools/playwright_to_gradescope.py"
SINGLE_SKETCH="/singleSketch"
MULTI_SKETCH="/multiSketch"

source "$DIR"/grading.config


###########################################################################################
#
#   Prepare student files for submission:
#       - Unzip all zip files, search for /src/main/, and move to staging/src/main/
#       - Print elegant error if src not found showing all files that were found
#
###########################################################################################
cd $STUDENT_SUBMISSION_DIR

echo '[GS] Extracting zips in student submission...'
find . -name "*.zip" | while read filename; do unzip -o -d "`dirname "$filename"`" "$filename"; done;

# Clean out __MACOSX directories and hidden files
find . -name "__MACOSX" -exec rm -rf {} \;

# Remove old results.json files
rm -r "$OUTPUT_DIR"/*.json

find_and_copy_sketch() {
    PATH_TO_FILES=$1 # The path to the file to search e.g. */sketch_folder or *
    COPY_TO=$2 # The path in the staging area that the submission file should be copied to
    # Search for the sketch first
    echo "[GS] Copy from $PATH_TO_FILES to $COPY_TO"
    #STUDENT_SKETCH=$(find . -path $PATH_TO_FILES)
    STUDENT_SKETCH=$(find -path "*/$PATH_TO_FILES") 
    # for multi, zipped inside folder > no -path
    # for single, submit just sketch.js > -path > tested with new command, works
    # for single, zipped folder > no -path > tested with new command, works
    if [ -n "$STUDENT_SKETCH" ]
    then
        echo " [GS] Copying $STUDENT_SKETCH to $COPY_TO";
        rm -rf $COPY_TO/sketch.js
        cp -r $STUDENT_SKETCH $COPY_TO
        echo " [GS] Copy complete!"
    else
        echo "[GS] Could not find $PATH_TO_FILES to copy in unpacked student submission"
    fi
}

# Searches student code and copies it to STAGING($2)
# copy_student_directory () {
#     # set source to include single / multi sketch folder name
#     STAGING=$1

#     if [ "$CONFIG_TEST_SINGLE_SKETCH" = true ] ; then
#         STUDENT_SKETCH=$(find . -path "*/sketch.js"); # just copy the sketch file
#         COMPLETE_STAGING="$STAGING$SINGLE_SKETCH"
#         if [ -n "$STUDENT_SKETCH" ]
#         then
#             echo "  [GS] Copying $STUDENT_SKETCH to $COMPLETE_STAGING";
#             rm -rf $COMPLETE_STAGING/sketch.js
#             cp -r $STUDENT_SKETCH $COMPLETE_STAGING
#             echo "  [GS] Copy complete!"

#         else
#             echo "[GS] Could not find sketch.js to copy in unpacked student submission ("$STUDENT_SUBMISSION_DIR"). Exiting...";

#         fi
#     else
#         COMPLETE_STAGING="$STAGING$MULTI_SKETCH"
#         echo "[GS] Looking for sketch folders in "$COMPLETE_STAGING""
#         for FILE in $COMPLETE_STAGING/*; do
#             echo "[GS] checking "$FILE""
#             if [ -d $FILE ]
#             then
#                 SKETCH_FOLDER="$(basename -- $FILE)"
#                 echo "[GS] searching for "$SKETCH_FOLDER" sketch in student submission"
#                 STUDENT_SKETCH_IN_FOLDER=$(find . -path "*/"$SKETCH_FOLDER"/sketch.js");
#                 if [ -n "$STUDENT_SKETCH_IN_FOLDER" ]
#                 then
#                     echo "  [GS] Copying $STUDENT_SKETCH_IN_FOLDER to $COMPLETE_STAGING"$SKETCH_FOLDER"/";
#                     rm -rf $COMPLETE_STAGING/$SKETCH_FOLDER/sketch.js
#                     cp -r $STUDENT_SKETCH_IN_FOLDER $COMPLETE_STAGING/$SKETCH_FOLDER
#                     echo "  [GS] Copy complete!"

#                 else
#                     echo "[GS] Could not find $SKETCH_FOLDER/sketch.js to copy in unpacked student submission ("$STUDENT_SUBMISSION_DIR"). Exiting...";

#                 fi
#             fi
#         done
#     fi
# }

# copy_student_directory "$DIR"/staging
if [ "$CONFIG_TEST_SINGLE_SKETCH" = true ] ; then
    echo "[GS] Running in single sketch mode"
    COPY_TO="$DIR"/staging"$SINGLE_SKETCH"
    PATH_TO_FILES="sketch.js"
    find_and_copy_sketch $PATH_TO_FILES $COPY_TO
else
    echo "[GS] Running in multi sketch mode"
    COMPLETE_STAGING="$DIR"/staging"$MULTI_SKETCH"
    echo "[GS] Looking for sketch folders in "$COMPLETE_STAGING""
    for FILE in $COMPLETE_STAGING/*; do
        echo "[GS] checking "$FILE""
        if [ -d $FILE ]
        then
            SKETCH_FOLDER="$(basename -- $FILE)"
            COPY_TO="$COMPLETE_STAGING"/"$SKETCH_FOLDER"
            PATH_TO_FILES=""$SKETCH_FOLDER"/sketch.js"
            find_and_copy_sketch $PATH_TO_FILES $COPY_TO
        fi
    done
fi


cd "$DIR"/staging

rm -rf "$DIR"/staging/node_modules

npm install

npx playwright install --with-deps chromium
npx playwright test

python3 $PLAYWRIGHT_JSON_TOOL -i ctrf/ctrf-report.json -o "$OUTPUT_DIR"/"results.json"

