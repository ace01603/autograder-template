#!/usr/bin/env bash
###
# This script was created using a Jest-Gradescope autograder for reference
# https://github.com/ucsb-gradescope-tools/jest-autograder/
# The original autograder has been modified to work with the Playwright testing library (instead of Jest) and p5js sketches
###

DIR="/autograder/source"
OUTPUT_DIR="/autograder/results"
STUDENT_SUBMISSION_DIR="/autograder/submission"
PLAYWRIGHT_JSON_TOOL="$DIR/tools/playwright_to_gradescope.py"

source "$DIR"/grading.config


###########################################################################################
#
#   Prepare student files for submission:
#       - Unzip all zip files, search for /src/main/, and move to staging/src/main/
#       - Print elegant error if src not found showing all files that were found
#
###########################################################################################
cd $STUDENT_SUBMISSION_DIR

echo '[GS] Extracting zips in student submission...'
find . -name "*.zip" | while read filename; do unzip -o -d "`dirname "$filename"`" "$filename"; done;

# Clean out __MACOSX directories and hidden files
find . -name "__MACOSX" -exec rm -rf {} \;

# Remove old results.json files
rm -r "$OUTPUT_DIR"/*.json

# Searches student code for a DIR_TO_COPY($1), and copies it to DESTINATION_JAVA_SRC($2)
# Called below
copy_student_directory () {
    DIR_TO_COPY=$1
    DESTINATION_JAVA_SRC=$2

    if [ "$CONFIG_TEST_STUDENT_MAIN" = true ] ; then
        # STUDENT_SUBMISSION_JAVA_SRC=$(find . -path "*/$DIR_TO_COPY");
        STUDENT_SUBMISSION_JAVA_SRC=$(find . -path "*/sketch.js"); # just copy the sketch file
        if [ -n "$STUDENT_SUBMISSION_JAVA_SRC" ]
        then
            # echo "[GS] Found student $DIR_TO_COPY directory at $STUDENT_SUBMISSION_JAVA_SRC";
            echo "  [GS] Copying $STUDENT_SUBMISSION_JAVA_SRC to $DESTINATION_JAVA_SRC";
            # rm -rf $DESTINATION_JAVA_SRC/*
            rm -rf $DESTINATION_JAVA_SRC/sketch.js
            cp -r $STUDENT_SUBMISSION_JAVA_SRC $DESTINATION_JAVA_SRC/
            echo "  [GS] Copy complete!"

        else
            echo "[GS] Could not find "$DIR_TO_COPY" in unpacked student submission ("$STUDENT_SUBMISSION_DIR"). Exiting...";

        fi
    else
        echo "[GS] Don't know how to handle multiple sketch submissions yet!"
    fi
}

DIRECTORY_SOUGHT="" # top level? Will only work for single sketch
copy_student_directory "$DIRECTORY_SOUGHT" "$DIR"/staging # /${DIRECTORY_SOUGHT}

cd "$DIR"/staging

rm -rf "$DIR"/staging/node_modules

npm install

npx playwright install
npx playwright test

python3 $PLAYWRIGHT_JSON_TOOL -i ctrf/ctrf-report.json -o "$OUTPUT_DIR"/"results.json"

